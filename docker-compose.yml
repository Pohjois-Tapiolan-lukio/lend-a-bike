version: '2.1'

services:
    api:
        image: node:alpine
        entrypoint: ./api-entry.sh
        environment:
            - API_ROUTE_PREFIX=/api
            - PORT=5000
            - JWT_KEY=arstarst1234
        volumes:
            - ./api/:/api/
            - ./api-entry.sh:/api-entry.sh
            - ./data/images/:/api/images/
        depends_on:
            database:
                condition: service_healthy

    frontend:
        image: node:alpine
        entrypoint: ./frontend-entry.sh
        volumes:
            - ./frontend/:/frontend/
            - ./frontend-entry.sh:/frontend-entry.sh

    proxy:
        image: nginx:alpine
        volumes:
            - ./data/images/:/www/images/
            - ./nginx.conf:/etc/nginx/nginx.conf
        links:
            - frontend
            - mongoexpress
            - api
        ports:
            - 80:80

    database:
        image: mongo:latest
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=password
            - MONGO_DATA_DIR=/data/db
        volumes:
            - ./data/db/:/data/db/
            - ./mongo_init.js:/docker-entrypoint-initdb.d/mongo_init.js
        command: mongod --auth
        healthcheck:
            test: "exit 0"

    mongoexpress:
        image: mongo-express
        links:
            - database
        environment:
            - ME_CONFIG_MONGODB_SERVER=database
            - ME_CONFIG_MONGODB_ADMINUSERNAME=root
            - ME_CONFIG_MONGODB_ADMINPASSWORD=password
            - ME_CONFIG_SITE_BASEURL=/mongoadmin/
        depends_on:
            database:
                condition: service_healthy

    swaggereditor:
        image: swaggerapi/swagger-editor
        ports:
            - 8080:8080

# vim: et ts=4 sw=4 :
